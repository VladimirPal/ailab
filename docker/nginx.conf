upstream app {
  hash $remote_addr consistent;
  server ailab_api_app:3030;
}

server {
  server_name api.ailab.lan api.ailab.internal;
  resolver 127.0.0.11 [::1]:5353 valid=15s;

  access_log  /var/log/nginx/access-api.log;
  error_log  /var/log/nginx/error-api.log;

  location / {
    proxy_pass http://app;

    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Real-IP	$remote_addr;

    proxy_set_header X-NginX-Proxy true;
    proxy_cache_bypass $http_upgrade;

    proxy_read_timeout 86400s;
    proxy_send_timeout 86400s;
    proxy_connect_timeout 86400s;
  }

  listen [::]:443 ssl;
  listen 443 ssl;
  ssl_certificate /tmp/ssl/nginx.crt;
  ssl_certificate_key /tmp/ssl/nginx.key;

  ssl_protocols TLSv1.3;
  ssl_prefer_server_ciphers on;
  ssl_dhparam /etc/nginx/dhparam.pem;

  ssl_ciphers EECDH+AESGCM:EDH+AESGCM;
  ssl_ecdh_curve secp384r1;
  ssl_session_timeout  10m;
  ssl_session_cache shared:SSL:10m;
  ssl_session_tickets off;
  ssl_stapling off;
  ssl_stapling_verify off;
  resolver_timeout 5s;

  add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
}

server {
  server_name app-prod.ailab.lan;

  root /usr/share/nginx/html/ailab;
  index index.html;

  access_log /var/log/nginx/access-app.log;
  error_log /var/log/nginx/error-app.log;

  location / {
    try_files $uri $uri/ /index.html;
  }

  listen [::]:443 ssl;
  listen 443 ssl;
  ssl_certificate /tmp/ssl/nginx.crt;
  ssl_certificate_key /tmp/ssl/nginx.key;

  ssl_protocols TLSv1.3;
  ssl_prefer_server_ciphers on;
  ssl_dhparam /etc/nginx/dhparam.pem;

  ssl_ciphers EECDH+AESGCM:EDH+AESGCM;
  ssl_ecdh_curve secp384r1;
  ssl_session_timeout  10m;
  ssl_session_cache shared:SSL:10m;
  ssl_session_tickets off;
  ssl_stapling off;
  ssl_stapling_verify off;
  resolver_timeout 5s;

  add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
}

server {
  if ($host = api.ailab.lan) {
    return 301 https://$host$request_uri;
  }

  if ($host = api.ailab.internal) {
    return 301 https://$host$request_uri;
  }

  listen 80 ;
  listen [::]:80 ;
  server_name api.ailab.internal api.ailab.lan;

  return 404;
}
